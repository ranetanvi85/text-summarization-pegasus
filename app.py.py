# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xlERzPBWHb63aPBmGVzFwGZMN9XDJ6cG
"""

!pip install streamlit
!pip install pyngrok

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# from transformers import PegasusTokenizer, PegasusForConditionalGeneration
# 
# # Load the Pegasus model and tokenizer
# model_name = "google/pegasus-xsum"
# tokenizer = PegasusTokenizer.from_pretrained(model_name)
# model = PegasusForConditionalGeneration.from_pretrained(model_name)
# 
# # Function to summarize text using Pegasus
# def summarize_text(text):
#     inputs = tokenizer(text, truncation=True, padding="longest", return_tensors="pt")
#     summary_ids = model.generate(inputs.input_ids, max_length=60, num_beams=5, early_stopping=True)
#     summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)
#     return summary
# 
# # Streamlit UI
# st.title("Text Summarization Web App")
# st.write("This app summarizes large texts using the Pegasus model from Hugging Face.")
# 
# # Input text area for user
# user_input = st.text_area("Enter text to summarize:", height=300)
# 
# # Summarize button
# if st.button("Summarize"):
#     if user_input:
#         with st.spinner('Summarizing...'):
#             summary = summarize_text(user_input)
#             st.success("Summary:")
#             st.write(summary)
#     else:
#         st.warning("Please enter some text to summarize.")
#

from pyngrok import ngrok

# Start Streamlit in the background
!streamlit run app.py &

# Expose the Streamlit app to the internet using ngrok
public_url = ngrok.connect(port='8501')
print(f"Streamlit app is running at: {public_url}")